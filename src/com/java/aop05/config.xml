<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
<!-- 공통 클래스 -->
<bean id="advice" class="com.java.aop05.AopAspect"></bean>
<!-- 핵심 클래스 -->
<bean class="com.java.aop05.AopTest"></bean>

<!-- aop설정 -->
<aop:config>
	<!-- pointcut: 핵심 기능 메소드를 찾는 역할 -->
	<!-- within(): 특정 클래스에 속하는 메소드를 JoinPoint로 설정되도록 명시 
		within(com.java.aop05.*) 패키지단위!!
	-->
	<!-- execution: 공통클래스의 메소드(advice)를 적용할 메소드를 명시
		execution([수식어] 리턴타입 경로) .. : 0개이상 여러개, * : 모두
		execution(* com.java.aop05..*Test.*(..)) 
		수식어, 리턴타입 어느것이든 상관없고
		com.java.aop05의 하위 클래스 중 Test로 끝나는 클래스 전부다에서
		파라미터 변수가 0개이상들어가는 어떠한 메소드 전부다 찾아라
		
		execution(* print*(*,*))
		print로 시작하는 함수 전체에서 파라미터가 두개 들어가는 
	-->
	<aop:pointcut expression="execution(void com.java.aop05..AopTest.method*(..))" id="aopTest"/>
	<aop:aspect ref="advice">
		<!-- <aop:before method="before" pointcut-ref="aopTest"/>
		<aop:after method="after" pointcut-ref="aopTest"/> -->
		<aop:around method="around" pointcut-ref="aopTest"/>
	</aop:aspect>
</aop:config>
</beans>
